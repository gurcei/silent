' =======================' ”…Ã≈Œ‘ ≈Œ…«Õ¡ ¬œœ‘ Õ≈Œ’' =======================#OUTPUT "AUTOBOOT.C65"'-------.DEFINES'-------#DECLARE ROM$, VM$, FNAME$#DECLARE MASK%, MONTH%, YEAR%, DS%, DATE$#DECLARE FPGAØHASH$, REVERSE%, UPPER, LOWER#DECLARE A$, K, OFFS, XEMUØFLAG#DECLARE RBWØCLR, CTIME, RET%#DEFINE ‘“’≈ = 1#DEFINE ∆¡Ã”≈ = 0'----.INIT'----  FAST 40  BANK 128  OFFS = $FFD3630  POKE $D020, 0, 0  PRINT CHR$(27);"8"  'PRINT CHR$(142);  ' SWITCH BACK TO UPPER-CASE  PRINT CHR$(14);  ' LOWER-CASE'----.MAIN'----  GOSUB SHOWØMAINØMENU  CTIME=TI  DO    IF TI-CTIME > .03 THEN BEGIN      GOSUB CYCLEØCOLOURS      CTIME=TI    BEND    GET A$  LOOP WHILE A$=""  IF A$="1" THEN GOSUB PERFORMØCHECKS  IF A$="2" THEN GOSUB SHOWØABOUT  IF A$="3" THEN GOSUB SHOWØSOURCEØLIST  IF A$="/" THEN PRINT "ìBYE!";:END    GOTO MAIN  END'-------------.CYCLEØCOLOURS'-------------  FOR K = 0 TO 16    POKE $FF80001+K, MOD(RBWØCLR+K,16) + 64  NEXT K  RBWØCLR = MOD(RBWØCLR + 1, 16)  RETURN'--------------.SHOWØMAINØMENU'--------------  PRINT "ì";  PRINT "'ê‘HE ü”";CHR$(156);"ILEûNÅT ï≈ñNóIòGôMöA' ƒEMO  -  öGURCE/BAS  -  2ND  UNE 2024"  PRINT "========================"  PRINT  PRINT "≈XCLUSIVELY PREMIERED BY üRETRO√OMBS!"  PRINT  PRINT "ü1) –LAY DEMO"  PRINT "ü2) ¡BOUT THIS DEMO"  PRINT "ü3) ¬ROWSE THE SOURCE CODE"  PRINT "ü/) ≈XIT"  RETURN'--------------.PERFORMØCHECKS'--------------  GOSUB XEMUØCHECK  IF XEMUØFLAG = 0 THEN BEGIN    GOSUB COREØCHECK  BEND  GOSUB ROMØCHECK  GOSUB NTSCØTOØPAL  CLR  DLOAD "SILENT"  RETURN'------------------.ISØCOREØDATEØOLDER'------------------  IF YEAR% < 2024 THEN RET% = ‘“’≈ : RETURN  IF YEAR% > 2024 THEN RET% = ∆¡Ã”≈ : RETURN  IF MONTH% < 5 THEN RET% = ‘“’≈ : RETURN  IF MONTH% > 5 THEN RET% = ∆¡Ã”≈ : RETURN  IF DS% < 24 THEN RET% = ‘“’≈ : RETURN  IF DS% > 24 THEN RET% = ∆¡Ã”≈ : RETURN  ' FINAL CASE OF DATES BEING EQUAL  RET% = ∆¡Ã”≈  RETURN'----------.COREØCHECK'----------  GOSUB FORMATØDATESTAMP  GOSUB FORMATØFPGAØHASH  GOSUB ISØCOREØDATEØOLDER  IF FPGAØHASH$<>"E296C3C9" AND RET% = ‘“’≈ THEN BEGIN    PRINT "ì√œ“≈ ◊¡“Œ…Œ«: ‘HIS DEMO PRESENTLY WORKS BEST USING THIS CORE OR NEWER:"    PRINT "- ƒEVELOPMENT CORE: E296C3C9  2024-05-24"    PRINT "-        ŸOUR CORE: ";FPGAØHASH$;"  ";DATE$;""    PRINT    PRINT "∆OR BEST DEMO PERFORMANCE:"    PRINT "- –LEASE DOWNLOAD NEWER CORE FROM:"    PRINT "  - üHTTPS://BUILDER.MEGA65.ORG/JOB/MEGA65-CORE/JOB/DEVELOPMENT/"    PRINT    PRINT "- ’NZIP THE 'üMEGA65*.7Z' FILE AND LOCATE THE .COR FILE WITHIN"    PRINT "- –LACE IT ON YOUR SD-CARD"    PRINT "- –OWER UP WITH THE 'üNO SCROLL' KEY AND FLASH IT TO A SPARE SLOT"    PRINT "- ”ELECT THIS CORE FROM THE FLASH MENU TO RUN IT"    PRINT    PRINT "‘HIS CORE CONTAINS HYPPO REPAIRS NEEDED BY THE DEMO:"    PRINT "- FIX TO GET/SET MAP CALLS"    PRINT "- FIX TO BOOT FROM 'Õ≈«¡659.“œÕ'"    PRINT    PRINT "…F YOU HAVE A NEWER DEVELOPMENT ROM, IT SHOULD WORK FINE TOO."    PRINT    PRINT "û–RESS ANY KEY TO CONTINUE..."    GET KEY A$  BEND  RETURN'----------.SHOWØABOUT'----------  PRINT "ìñ¡¬œ’‘ (1/2)"  PRINT  "====="  PRINT "… HAD BEEN ACCUMULATING LITTLE SNIPPETS OF IDEAS … HAD WRITTEN IN ¬¡”…√ 65"  PRINT "OVER THE PAST YEAR, THINKING THERE WOULD COME A TIME … WOULD BE ABLE TO"  PRINT "STITCH THEM ALL TOGETHER INTO A NICE CUTE DEMO TO ONCE AGAIN SHOWCASE"  PRINT "THE FUN THAT CAN BE HAD IN ü¬¡”…√ 65."  PRINT  PRINT "‘HAT OPPORTUNITY CAME TO ME THIS ÕAY AND … PUSHED HARD TO STITCH THEM"  PRINT "ALL TOGETHER. ¡LONG THE WAY, … THOUGHT …'D BRUSH UP ON MY ASSEMBLY"  PRINT "LANGUAGE SKILLS AND RELIEVE SOME OF THE PERFORMANCE BOTTLENECKS … WAS"  PRINT "FACING."  PRINT  PRINT "- ü¬¡”…√ 65 CODE WAS WRITTEN IN ü≈LEVEN"  PRINT "- ü¡SSEMBLY CODE WAS WRITTEN IN üÕEGA ¡SSEMBLER AND ü¡CME"  PRINT "- ¡LL VISUAL ASPECTS OF THE DEMO ARE ü100% –≈‘”√……"  PRINT "- ‘HE MUSIC OF THE DEMO IS PERFORMED BY ü¬¡”…√ 65'S '–Ã¡Ÿ' COMMAND"  PRINT "û–RESS ANY KEY TO CONTINUE..."  GET KEY A$  PRINT "ìñ¡¬œ’‘ (2/2)"  PRINT  "====="  PRINT "… HAVE ADDED THE SOURCE CODE ON THIS DISK, AND YOU'RE WELCOME TO HAVE"  PRINT "A BROWSE OF IT!"  PRINT  PRINT "… WILL ALSO AIM TO SHARE THE REPOSITORY IN GITHUB AT:"  PRINT "- üHTTPS://GITHUB.COM/GURCEI/SILENT"  PRINT  PRINT "◊ANT TO LEARN MORE ABOUT ≈LEVEN? »AVE A READ OF THIS WIKI PAGE:"  PRINT "- üHTTPS://TINYURL.COM/M65-ELEVEN"  PRINT   PRINT "»OPE YOU ENJOY THE DEMO! :)"  PRINT  PRINT "öGURCE/BAS"  PRINT "û–RESS ANY KEY TO CONTINUE..."  GET KEY A$  A$=""  RETURN'----------------.SHOWØSOURCEØLIST'----------------  PRINT "ìñÕ¡…Œ ”œ’“√≈ ∆…Ã≈”"  PRINT "================="  PRINT "ü1) SILENT.PRJ"  PRINT "ü2) SILENT.EL"  PRINT "ü3) SILENT2.EL"  PRINT "ü4) ROTATE.ASM"  PRINT "ü5) ASMHELPER.A"  PRINT  PRINT "ñÕ…”√. ∆…Ã≈”"  PRINT "==========="  PRINT "ü6) GRABBER.EL"  PRINT "ü7) BASLOGO.EL"  PRINT "ü8) STARFIELD.EL"  PRINT "ü9) LINE.EL"  PRINT "üA) PETLINE.EL"  PRINT "üB) ROTATE.EL"  PRINT "üC) WRITER.EL"  PRINT "üD) MELODY.EL"  PRINT "üE) AUTOBOOT.EL"  PRINT  PRINT "ü/) ≈XIT"  GET KEY A$  IF A$="1" THEN GOSUB SILENTØPRJ  IF A$="2" THEN GOSUB SILENTØEL  IF A$="3" THEN GOSUB SILENT2ØEL  IF A$="4" THEN GOSUB ROTATEØASM  IF A$="5" THEN GOSUB ASMHELPERØA  IF A$="6" THEN GOSUB GRABBERØEL  IF A$="7" THEN GOSUB BASLOGOØEL  IF A$="8" THEN GOSUB STARFIELDØEL  IF A$="9" THEN GOSUB LINEØEL  IF A$="A" THEN GOSUB PETLINEØEL  IF A$="B" THEN GOSUB ROTATEØEL  IF A$="C" THEN GOSUB WRITERØEL  IF A$="D" THEN GOSUB MELODYØEL  IF A$="E" THEN GOSUB AUTOBOOTØEL  IF A$="/" THEN A$="": RETURN  GOTO SHOWØSOURCEØLIST  RETURN.AUTOLOADØ11'-----------  PRINT "ìAUTOLOAD ";CHR$(34);FNAME$;CHR$(34):CLR:DLOAD "11BOOT.C65"  RETURN.AUTOLOADØMA'-----------  POKE $D020,6,6  PRINT CHR$(142);  ' SWITCH BACK TO UPPER-CASE  PRINT "ìAUTOLOAD ";CHR$(34);FNAME$;CHR$(34)  CLR  DLOAD "MEGA ASSEMBLER"  RETURN.SILENTØPRJ'----------  DO    PRINT "ì";    PRINT "ñSILENT.PRJ"    PRINT "=========="    PRINT "‘HE CONTENTS OF THIS FILE AREN'T TERRIBLY EXCITING. …T JUST LISTS THE"    PRINT "TWO MAIN SOURCE FILES THE PROJECT CONSISTS OF:"    PRINT "  - SILENT.EL"    PRINT "  - SILENT2.EL"    PRINT    PRINT "’NDER THE BONNET, ≈LEVEN WILL JUST PASTE BOTH FILES INTO ATTIC RAM AND"    PRINT "TREAT THEM LIKE THEY ARE ONE BIG FILE. …T WAS A QUICK/DIRTY WORKAROUND"    PRINT "TO GET AROUND ≈LEVEN'S 2000 SOURCE-LINE LIMITATION AND AVOID ¬¡”…√"    PRINT "STRING SPACE EXHAUSTION ISSUES."    PRINT    PRINT "…N ORDER TO COMPILE THE PROJECT FROM ≈LEVEN, LOAD UP THIS .PRJ FILE"    PRINT "FIRST, THEN PRESS 'ö∆5' (AND WAIT PATIENTLY... ;))"    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñSILENT.PRJ' IN ≈LEVEN"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="SILENT.PRJ":GOTO AUTOLOADØ11  LOOP WHILE A$<>"/"  A$=""  RETURN.SILENTØEL'---------  DO    PRINT "ì";    PRINT "ñSILENT.EL"    PRINT "========="    PRINT "‘HE MAIN SOURCE FILE FOR THE DEMO, AND THE LOCATION WHERE ALL THE"    PRINT "INDIVIDUAL EXAMPLES … HAD NEEDED TO BE STITCHED TOGETHER."    PRINT    PRINT "‘HE LARGER THIS FILE GREW, THE MORE SLOW AND PAINFUL IT BECAME TO"    PRINT "ITERATE. ≈VEN USING ÿEMU'S 'ö-FASTCLOCK 200' OPTION, WHILE HELPFUL,"    PRINT "WAS STILL FRUSTRATINGLY SLOW."    PRINT    PRINT "‘O COMPLICATE THINGS FURTHER, THERE WAS THE 2000 LINE LIMIT OF ≈LEVEN"    PRINT "AND ¬¡”…√ STRING SPACE EXHAUSTION TO CONTEND WITH."    PRINT    PRINT "‘HANKFULLY, … WAS ABLE TO PUSH A LITTLE FURTHER THANKS TO THE .PRJ"    PRINT "WORKAROUND, BUT STILL, LOOKING FORWARD TO THE DAY ≈LEVEN BUILDS A LOT"    PRINT "FASTER!"    PRINT    PRINT "œH, AND WORKING AROUND TIMING DIFFERENCES BETWEEN ÿEMU AND REAL HARDWARE"    PRINT "WASN'T FUN EITHER!"    PRINT    PRINT "Œœ‘≈: ‘O COMPILE THE PAIR OF FILES, YOU MUST LOAD 'öSILENT.PRJ' FIRST,"    PRINT "      AND THEN PRESS 'ö∆5'.    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñSILENT.EL' IN ≈LEVEN"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="SILENT.EL":GOTO AUTOLOADØ11  LOOP WHILE A$<>"/"  A$=""  RETURN.SILENT2ØEL'----------  DO    PRINT "ì";    PRINT "ñSILENT2.EL"    PRINT "=========="    PRINT "¡FTER A WHILE, 'öSILENT.EL' WAS GROWING SO LARGE THAT ≈LEVEN WAS"    PRINT "RUNNING OUT OF STRING SPACE AND APPROACHING ITS 2000 LINE (OF SOURCE)"    PRINT "LIMIT."    PRINT    PRINT "¡FTER TWEAKING ≈LEVEN TO PERMIT ME TO LET A .PRJ FILE LIST SEVERAL"    PRINT "*.EL FILES TO BE COMPILED AS ONE SINGLE ENTITY, … WAS ABLE TO CONTINUE"    PRINT "GROWING THE DEMO INTO THIS FILE!"    PRINT    PRINT "Œœ‘≈: ‘O COMPILE THE PAIR OF FILES, YOU MUST LOAD 'öSILENT.PRJ' FIRST!"    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñSILENT2.EL' IN ≈LEVEN"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="SILENT2.EL":GOTO AUTOLOADØ11  LOOP WHILE A$<>"/"  A$=""  RETURN.ROTATEØASM'----------  DO    PRINT "ì";    PRINT "ñROTATE.ASM"    PRINT "=========="    PRINT "‘HIS WAS MY FIRST ATTEMPT TO PORT SOME OF MY ¬¡”…√ LOGIC TO ASSEMBLY."    PRINT "(THE LOGIC TO ROTATE THE SPIRAL)"    PRINT    PRINT "ÕEGA ¡SSEMBLER IS SLOW, NO MACROS, BUT IT GETS THE JOB DONE NATIVELY!"    PRINT    PRINT "∆OR LATER ¡SSEMBLY FORAYS, … SWITCHED TO ¡CME CROSS-COMPILER."    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñROTATE.ASM' IN ÕEGA ¡SSEMBLER"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="ROTATE.ASM":GOTO AUTOLOADØMA  LOOP WHILE A$<>"/"  A$=""  RETURN.ASMHELPERØA'-----------  DO    PRINT "ì";    PRINT "ñASMHELPER.A"    PRINT "==========="    PRINT "¡FTER GETTING ACQUAINTED WITH GRIM FANDANGO'S 'öÕ≈«¡–Ãœ‘' UTILITY"    PRINT "AND ITS USE OF THE ö¡CME COMPILER, ITS MACRO SYSTEM WAS HARD TO RESIST."    PRINT    PRINT "”O … INEVITABLY MADE THE SWITCH FROM NATIVE ÕEGA ¡SSEMBLER TO ¡CME."    PRINT    PRINT "¡H WELL, …'M SURE ONE DAY ÕEGA ¡SSEMBLER WILL HAVE SUCH PERKS TOO!"    PRINT    PRINT "‘HIS 'öASMHELPER.A' IS TO BE COMPILED ON YOUR –√ VIA THE ¡CME COMPILER."    PRINT "… HAVE PROVIDED IT ON THIS DISK JUST TO EASE YOUR VIEWING PLEASURE!"    PRINT    PRINT "… FOUND ¡SSEMBLY TO BE A VERY TIME-EXPENSIVE APPROACH TO DEVELOPMENT."    PRINT "”IMPLE 10 LINE ¬¡”…√ ROUTINES SEEMED TO TAKE ABOUT HALF OF MY DAY TO"    PRINT "TRANSLATE INTO 200 LINES OF ASSEMBLY, AND THEN …'D SPEND THE OTHER HALF"    PRINT "OF THE DAY DEBUGGING IT!"    PRINT    PRINT "ü“≈‘’“Œ) ”HOW 'ñASMHELPER.A' LISTING"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FAST 1:TYPE "ASMHELPER.A":FAST 40  LOOP WHILE A$<>"/"  A$=""  RETURN.GRABBERØEL'----------  DO    PRINT "ì";    PRINT "ñGRABBER.EL"    PRINT "=========="    PRINT "‘HIS IS A TOOL … HAD USED PREVIOUSLY FOR THE 'ÿANADU - ¬¡”…√ 65 ≈DITION'"    PRINT "DEMO FROM 2022. œN THAT OCCASION, … HAD USED IT TO RECORD THE –≈‘”√……"    PRINT "ANIMATION DETAILS IN THE INITIAL ”ONNY 'PAINTING' SEQUENCE."    PRINT    PRINT "œN THIS OCCASION, … USED IT TO SAVE OUT –≈‘”√…… OBJECTS FOR THE"    PRINT "INDIVIDUAL ELEMENTS OF THE ¬¡” LOGO (THE BACKDROP, THE ¬, ¡, AND ”)"    PRINT    PRINT "’SAGE:"    PRINT "  - …F IT ASKS ABOUT A MAGIC SIGNATURE, JUST TYPE 'öY'"    PRINT "  - –RESS 'ö∆1' AND LOAD 'ö¬¡”.¬…Œ'"    PRINT "  - –RESS 'ö√' TO DRAW THE FIRST RECORDED –≈‘”√…… OBJECT"    PRINT "  - –RESS 'ö=' TO DRAW THE NEXT RECORDED –≈‘”√…… OBJECT"    PRINT "  - –RESS 'ö-' TO DRAW THE PREVIOUS RECORDED –≈‘”√…… OBJECT"    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñGRABBER.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñGRABBER' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="GRABBER.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "GRABBER"  LOOP WHILE A$<>"/"  A$=""  RETURN.BASLOGOØEL'----------  DO    PRINT "ì";    PRINT "ñBASLOGO.EL"    PRINT "=========="    PRINT "… WANTED TO IMPROVE UPON THE 80X25 –≈‘”√…… ¬¡” LOGO … DREW FOR THE"    PRINT "'ÿANADU - ¬¡”…√ 65 ≈DITION' DEMO FROM 2022. ”O THIS TIME … REDREW IT"    PRINT "IN 80X50 TEXT MODE TO GET MORE DETAIL."    PRINT    PRINT "… THEN DREW OUT EACH LETTER INDIVIDUALLY, SO THAT … COULD SAVE THEM OUT"    PRINT "SEPARATELY IN THE 'öGRABBER.EL' TOOL, AS … THEN WANTED TO ANIMATE"    PRINT "THEM INDIVIDUALLY ON THE SCREEN AS THEY FELL DOWN."    PRINT    PRINT "‘HE BOUNCY EFFECT WAS ACHIEVED BY EITHER SKIPPING OR REPEATING SOME"    PRINT "ROWS, TO GIVE THE IMPRESSION OF SHRINKING OR STRETCHING THE HEIGHT."    PRINT    PRINT "…T NO LONGER SEEMS TO BE IN A FUNCTIONAL STATE ANYMORE, DON'T HAVE THE"    PRINT "ENERGY TO DEBUG IT RIGHT NOW... :)"    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñBASLOGO.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñBASLOGO' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="BASLOGO.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "BASLOGO"  LOOP WHILE A$<>"/"  A$=""  RETURN.STARFIELDØEL'------------  DO    PRINT "ì";    PRINT "ñSTARFIELD.EL"    PRINT "============"    PRINT "‘HIS INITIALLY STARTED OFF AS A SMALL EXAMPLE OF A STARFIELD."    PRINT    PRINT "‘HEN … SLOWLY STARTED ADDING MORE AND MORE ELEMENTS TO IT THAT CAME"    PRINT "FROM MY OTHER EXAMPLES."    PRINT    PRINT "‘HE REASONING FOR THIS APPROACH IS THAT ≈LEVEN'S COMPILATION STEP IS"    PRINT "VERY TIME INTENSIVE FOR LARGE PROGRAMS. ”O IT PROVED MORE TIME-EFFECTIVE"    PRINT "TO ITERATE QUICKLY ON SMALLER IDEAS IN SEPARATE FILES, AND THEN WHEN"    PRINT "THEY ARE READY, MERGE THOSE IDEAS TOGETHER."    PRINT    PRINT "… EVENTUALLY ABANDONED THIS FILE IN FAVOUR OF 'SILENT.EL' AS MY MERGE"    PRINT "LOCATION."    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñSTARFIELD.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñSTARFIELD' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="STARFIELD.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "STARFIELD"  LOOP WHILE A$<>"/"  A$=""  RETURN.LINEØEL'-------  DO    PRINT "ì";    PRINT "ñLINE.EL"    PRINT "======="    PRINT "‘HIS TOOL'S PURPOSE SEEMED TO EVOLVE OVER TIME."    PRINT    PRINT "÷ERSION 1: … USED IT TO DRAW THE '¡NATHEMA' LOGO, WHERE THE DETAILS"    PRINT "           OF EACH CHARACTER AND LOCATION … ADDED WERE PRESERVED"    PRINT    PRINT "÷ERSION 2: … EXTENDED UPON THE PRIOR LOGIC SO THAT … COULD DRAW THE"    PRINT "           LARGE '‘HE ”ILENT ≈NIGMA' TITLE AND LET THE SCREEN SCROLL"    PRINT    PRINT "÷ERSION 3: … EXTENDED IT ONCE MORE SO THAT … COULD DRAW INDIVIDUAL"    PRINT "           CHARACTERS WITHIN AN ALPHABET."    PRINT    PRINT "’SAGE:"    PRINT "  - –RESS ö∆9 TO SWITCH VERSIONS"    PRINT "  - ◊HILE IN ÷1, PRESS ö∆1 TO LOAD 'öANA.LN'"    PRINT "  - ◊HILE IN ÷2, PRESS ö∆1 TO LOAD 'öSILENT.L'"    PRINT "  - ◊HILE IN ÷3, PRESS ö∆1 TO LOAD 'öABC.LN'"    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñLINE.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñLINE' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="LINE.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "LINE"  LOOP WHILE A$<>"/"  A$=""  RETURN.PETLINEØEL'----------  DO    PRINT "ì";    PRINT "ñPETLINE.EL"    PRINT "=========="    PRINT "… USED THIS PROGRAM TO EXPLORE GRIM FANDANGO'S öÕ≈«¡–Ãœ‘ UTILITY"    PRINT "WHICH COULD DRAW 4X4 PIXEL –≈‘”√…… DOTS ON THE SCREEN."    PRINT "  - öHTTPS://GITHUB.COM/GRIM-FANDANGO/MEGAPLOT"    PRINT    PRINT "¡FTER TRYING TO DRAW A LINE BY CALLING IT FROM ¬¡”…√ PER EACH PIXEL,"    PRINT "IT PROVED TOO SLOW THAT WAY, SO … PORTED THE LINE-DRAWING LOGIC TO"    PRINT "ASSEMBLY AND ADDED THE LINE-DRAWING FACILITY INTO HIS UTILITY."    PRINT    PRINT "¡S HE USED ¡CME COMPILER FOR HIS ASSEMBLY CODE, … FOLLOWED SUIT AND"    PRINT "ADDED TO HIS 'öMEGAPLOT.A' FILE."    PRINT    PRINT "…'LL AIM TO MAKE A –“ TO PUSH MY CHANGES INTO HIS REPO SOON."    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñPETLINE.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñPETLINE' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="PETLINE.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "PETLINE"  LOOP WHILE A$<>"/"  A$=""  RETURN.ROTATEØEL'---------  DO    PRINT "ì";    PRINT "ñROTATE.EL"    PRINT "========="    PRINT "‘HIS WAS MY INITIAL ATTEMPT AT DRAWING A ROTATING SPIRAL USING RADIAL"    PRINT "COORDINATES. ¡FTER THE INITIAL ¬¡”…√ 65 ATTEMPT PROVED TOO SLUGGISH,"    PRINT "… DECIDED TO PORT THE ROTATION LOGIC TO ASSEMBLY IN 'öROTATE.ASM'."    PRINT    PRINT "… LATER ADDED THE LOGIC TO DRAW THE CREDITS/GREETING TEXT OVER THE TOP"    PRINT "OF IT (CONTAINED IN THE 'öGREETS.T' FILE)."    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñROTATE.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñROTATE' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="ROTATE.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "ROTATE"  LOOP WHILE A$<>"/"  A$=""  RETURN.WRITERØEL'---------  DO    PRINT "ì";    PRINT "ñWRITER.EL"    PRINT "========="    PRINT "¡FTER MAKING THE 'öABC.LN' FONT VIA THE 'öLINE.EL' TOOL, … MADE THIS"    PRINT "SMALL PROGRAM TO TRY MAKE USE OF THE FONT TO DRAW TEXT ON THE FLY WITH"    PRINT "THE FONT."    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñWRITER.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñWRITER' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="WRITER.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "WRITER"  LOOP WHILE A$<>"/"  A$=""  RETURN.MELODYØEL'---------  DO    PRINT "ì";    PRINT "ñMELODY.EL"    PRINT "========="    PRINT "◊HILE …'M A BIG FAN OF ¬¡”…√ 65'S –Ã¡Ÿ COMMAND, … ADMIT THAT AFTER "    PRINT "MANUALLY SEQUENCING PLAY STRINGS FOR SEVERAL SONGS, IT DOES GET QUITE "    PRINT "TEDIOUS. ”O … TRIED MAKING THIS TOOL TO MAKE IT EASIER FOR ME TO "    PRINT "SEQUENCE SUCH PLAY STRINGS."    PRINT    PRINT "… MADE USE OF THIS TOOL FOR THE SONG USED BY THIS DEMO."    PRINT    PRINT "’SAGE:"    PRINT "- –RESS ö∆5 TO BUILD FROM SOURCE"    PRINT "- –RESS ö∆1 TO LOAD A SONG (TRY LOADING 'öENIGMA.P')"    PRINT "- –RESS ö∆9 TO OPEN SEQUENCER"    PRINT "- –RESS ö”HIFT+“ETURN TO PLAY SEQUENCE"    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñMELODY.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñPLAYMAKER' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="MELODY.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "PLAYMAKER"  LOOP WHILE A$<>"/"  A$=""  RETURN.AUTOBOOTØEL'-----------  DO    PRINT "ì";    PRINT "ñAUTOBOOT.EL"    PRINT "==========="    PRINT "◊HILE PREPARING THIS BOOT MENU (WHICH IS TYPICALLY AN 'öAUTOBOOT.C65' FILE)"    PRINT "… THOUGHT, WHY NOT WRITE THIS IN ≈LEVEN TOO?"    PRINT    PRINT "¡S … HAD WANTED TO HAVE SOME CORE/ROM/XEMU CHECK LOGIC WITHIN IT, …"    PRINT "FELT IT WAS BETTER TO HAVE SUCH ROUTINES WRITTEN IN ≈LEVEN, SO THAT"    PRINT "THEY COULD BE MORE EASILY COPY/PASTED INTO MY (OR EVEN YOUR!) FUTURE"    PRINT "PROJECTS."    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñAUTOBOOT.EL' IN ≈LEVEN"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="AUTOBOOT.EL":GOTO AUTOLOADØ11    IF A$="/" THEN A$="":RETURN    GOTO AUTOBOOTØEL  LOOP WHILE A$<>"/"  A$=""  RETURN'----------.XEMUØCHECK'----------  IF (PEEK($FFD360F) AND $20)=0 THEN XEMUØFLAG = 1  IF XEMUØFLAG = 0 THEN RETURN  PRINT "ìÿ≈Õ’ Œœ‘≈: ŸOU ARE RUNNING THIS DEMO IN THE ÿEMU EMULATOR."  PRINT  PRINT "–LEASE NOTE THAT SOME ASPECTS OF THIS DEMO RUN SLIGHTLY FASTER"  PRINT "UNDER ÿEMU COMPARED TO REAL HARDWARE (LIKELY DUE TO DIFFERENCES IN"  PRINT "HOW MUCH TIME IS CONSUMED FOR DMA CALLS, BUT STILL TO BE INVESTIGATED)"  PRINT  PRINT "¡PART FROM THAT, IT SHOULD STILL RUN FINE."  PRINT "û–RESS ANY KEY TO CONTINUE..."  GET KEY A$  RETURN'-----------.NTSCØTOØPAL'-----------  IF (PEEK($D06F) AND 128)=0 THEN VM$ = "PAL":ELSE VM$="NTSC"  IF VM$ = "PAL" THEN RETURN  PRINT "ì‘HIS PROGRAM REQUIRES SWITCHING FROM Œ‘”√ TO –¡Ã"  PRINT  PRINT "◊ILL SWITCH OVER NOW."  PRINT "û–RESS ANY KEY TO CONTINUE..."  GET KEY A$  POKE $FFD306F,$00  POKE $FFD3072,$00  POKE $FFD3048,$68  POKE $FFD3049,$00 OR (PEEK($FFD3049) AND $F0)  POKE $FFD304A,$F8  POKE $FFD304B,$01 OR (PEEK($FFD304B) AND $F0)  POKE $FFD304E,$68  POKE $FFD304F,$00 OR (PEEK($FFD304F) AND $F0)  POKE $FFD3072,$00  POKE $FFD3C0E, PEEK($FFD3C0E) OR $80  POKE $FFD3D0E, PEEK($FFD3D0E) OR $80  RETURN'---------.ROMØCHECK'---------  FOR K = 0 TO 5    ROM$=ROM$ + CHR$(PEEK($20017+K))  NEXT K  IF ROM$<>"999999" THEN BEGIN    PRINT "ì“œÕ ◊¡“Œ…Œ«: ‘HIS DEMO PRESENTLY WORKS BEST USING:"    PRINT "- ≈XPERIMENTAL ROM: V999999"    PRINT "-         ŸOUR ROM: V";ROM$;""    PRINT    PRINT "∆OR BEST DEMO PERFORMANCE:"    PRINT "- –LEASE DOWNLOAD IT FROM üHTTPS://GURCE.NET/999999.BIN"    PRINT "- “ENAME IT TO 'üÕ≈«¡65ñ9ü.“œÕ'"    PRINT "    (YES, ADD THE 'ñ9' TO THE END)"    PRINT "- –LACE IT ON YOUR SD-CARD"    PRINT "- “EBOOT YOUR MEGA65 WHILE HOLDING DOWN THE 'ñ9' KEY"    PRINT    PRINT "…F NOT DONE, YOU WILL EXPERIENCE MUSIC SLOWDOWN ISSUES DUE TO "    PRINT "EXISTING/OLDER ROMS BLOCKING BASIC '–Ã¡Ÿ' COMMAND WHILE IN SYS CALLS"    PRINT    PRINT "ŒEWER ROMS MADE AFTER THIS DEMO WILL LIKELY HAVE REPAIRED THIS MATTER."    PRINT    PRINT "û–RESS ANY KEY TO CONTINUE..."    GET KEY A$  BEND  RETURN'----------------.FORMATØDATESTAMP'----------------' ¡ PORT OF LYDON'S FUNCTION IN "FREEZEØMEGAINFO.C"  MASK% = $FF  ' FOR MAX10, WOULD NEED TO BE $3F  MONTH% = 1  YEAR% = 2020  DS% = ((PEEK(OFFS + 1) AND MASK%) * 256) + PEEK(OFFS)  DO WHILE DS% > 366    YEAR% = YEAR% + 1    DS% = DS% - 366  LOOP  IF MONTH%=1 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=2 AND NOT (YEAR% AND 3) AND DS%>29 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 29  BEND  IF MONTH%=2 AND (YEAR% AND 3) AND DS%>28 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 28  BEND  IF MONTH%=3 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=4 AND DS%>30 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 30  BEND  IF MONTH%=5 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=6 AND DS%>30 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 30  BEND  IF MONTH%=7 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=8 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=9 AND DS%>30 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 30  BEND  IF MONTH%=10 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=11 AND DS%>30 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 30  BEND  DATE$=MID$(STR$(YEAR%),2)  IF MONTH% > 9 THEN BEGIN    DATE$ = DATE$ + "-"  BEND:ELSE BEGIN    DATE$ = DATE$ + "-0"  BEND  DATE$ = DATE$ + MID$(STR$(MONTH%), 2)  IF DS% > 9 THEN BEGIN    DATE$ = DATE$ + "-"  BEND:ELSE BEGIN    DATE$ = DATE$ + "-0"  BEND  DATE$ = DATE$ + MID$(STR$(DS%), 2)  RETURN'----------------.FORMATØFPGAØHASH'----------------' ¡ PORT OF LYDON'S FUNCTION IN "FREEZEØMEGAINFO.C"  REVERSE% = 0  ' MAX10 IS REVERSED  IF REVERSE% THEN BEGIN    UPPER = (PEEK(OFFS+2) * 256) + PEEK(OFFS+3)    LOWER = (PEEK(OFFS+4) * 256) + PEEK(OFFS+5)  BEND:ELSE:BEGIN    UPPER = (PEEK(OFFS+5) * 256) + PEEK(OFFS+4)    LOWER = (PEEK(OFFS+3) * 256) + PEEK(OFFS+2)  BEND  FPGAØHASH$ = HEX$(UPPER) + HEX$(LOWER)  RETURN  