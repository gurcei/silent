#output "starfield"

' BANK4 Memory usage
' ------------------
' 4.0000 DMA-LIST
' 4.0020 var interface to assembly
'        0020: ptr to default_red&
'        0022: ptr to default_green&
'        0024: ptr to default_blue&
'        0026: ptr to curr_red&
'        0028: ptr to curr_green&
'        002a: ptr to curr_blue&
'        002c: ptr to data_addr%
'        002e: ptr to cdata_addr%
'        0030: ptr to scraddr%
'        0032: ptr to clraddr%
'        0034: ptr to inc%
' 4.0800 SCREEN MEMORY
' 4.2000 PETSCII GRAPHICS for BAS logo

' BANK5 Memory usage
' ------------------
' 5.0000 screen buffer for draw_petscii_frame
' 5.1000 color ram buffer for draw_petscii_frame


'--------
.declares
'--------
#declare starx(20), stary(20), starvx(20)
#declare k

#declare fname$, val&
#declare ldata&(12288), didx%=0, pidx%=0
#declare group_flag&, val&, rev_flag& = 0
#declare offs, ver=2
#declare lastflag, last_group_idx
#declare oldx, oldy, oldoffs, x, y, a$, xx, yy, debug, z$


'-------
.defines
'-------
#define OP_COPY = 0
#define OP_MIX  = 1
#define OP_SWAP = 2
#define OP_FILL = 3


'----
.main
'----
  gosub init

.loop
  gosub draw_starfield
  gosub page_flip

  gosub iter_starfield
  sleep .1
  goto loop
  end


'----
.init
'----
  print chr$(27);"5";
  for k = 0 to 20
    starx(k) = int(rnd(1)*80)
    stary(k) = int(rnd(1)*50)
    starvx(k) = rnd(1)*4 + .5
  next k

  ' clear the offscreen buffer
  edma 3, $fa0, 32, $50000
  edma 3, $fa0, 0, $51000

  fname$ = "ana.ln"
  ver = 1
  gosub load_line_file
  return


'--------------
.load_line_file
'-------------- ' (fname$)
  if fname$ = "" then return
  gosub line_file_init
  dopen #2,(fname$),r,u8

  do
    get #2, val&
    if st then exit
    ldata&(didx%) = val&
    didx% = didx% + 1
  loop

  dclose #2
  gosub play_data
  return


'----
.line_file_init
'----
  oldx = -1 : oldy = -1 : oldoffs = 0
  didx% = 0
  group_flag& = 0 : rev_flag& = 0
  offs = 0
  return


'--------------
.draw_starfield
'--------------
  for k = 0 to 20
    poke $50000 + starx(k) + stary(k) * 80, 46  ' dot
  next k
  return


'--------------
.iter_starfield
'--------------
  for k = 0 to 20
    starx(k) = mod(starx(k)-starvx(k) + 80, 80)
  next k
  return


'---------
.page_flip
'---------
  edma 0, $fa0, $50000, $40800
  edma 0, $fa0, $51000, $ff80000

  ' clear the offscreen buffer
  edma 3, $fa0, 32, $50000
  edma 3, $fa0, 1, $51000
  return


'---------
.play_data
'---------
  print "{x93}";

  offs=0
  pidx% = 0
  if lastflag = 1 then pidx% = last_group_idx : lastflag = 0

  do while pidx% < didx%

    cursor 0,49:print chr$(27);"qpidx=";pidx%;"[";ldata&(pidx%);ldata&(pidx%+1);ldata&(pidx%+2);

    val& = ldata&(pidx%) : pidx% = pidx% + 1
    if ver=3 and val& = $ff then begin
      if pidx% > last_group_idx then last_group_idx = pidx%
      goto pd_endloop
    bend

    'if val& = $ff then group_flag& = 1 : goto pd_endloop
    'if val& = $fe then group_flag& = 0 : sleep .02 : goto pd_endloop
    x = val& and $7f
    if ver=2 then begin
      x = val&
      val& = ldata&(pidx%)
      pidx% = pidx% + 1
      x = x + (val& and $7f) * 256
    bend

    if val& and $80 then print "{x12}"; : else print "{x92}";
    y = ldata&(pidx%) : pidx% = pidx% + 1
    a$ = chr$(ldata&(pidx%)) : pidx% = pidx% + 1

    if ver=2 then begin
      do while x-offs > 78
        gosub scroll_canvas_right
        print "{x13}";chr$(27);"qoffs=";offs;
      loop
    bend

    xx = x-offs : yy = y: cursor xx, yy : gosub draw_char

    if debug=1 then get key z$
      'print "{x13}{x11}";chr$(27);"q x,y,pidx,a$=";x;y;pidx%,asc(a$)
      'get key a$

    if group_flag& = 0 then sleep .02
.pd_endloop
  loop

  x = x-offs
  return


'-------------------
.scroll_canvas_right
'-------------------
  offs=offs+1
  for yy = 0 to 49
    edma OP_COPY, 79, $40801 + yy*80, $40800 + yy*80
    poke $40800 + 79 + yy*80, 32 
  next yy                
  return


'---------
.draw_char
'---------
  ' poke $40800 + x + y*80, asc(a$)
  ' poke $ff80000 + x + y*80, rcolor(1)
  print a$;
  return
ÿ