#output "line"

#declare a$, loc
#declare x=0, y=0
#declare t0=0
#declare modified%=0
#declare oldx, oldy
#declare fname$

#declare ldata&(8192), didx%=0
#declare group_flag&

gosub init

.main
gosub check_input
gosub show_cursor
goto main

'----
.init
'----
  ' switch back to upper-case
  ' poke $d018, peek($d018) and $fd
  oldx = -1 : oldy = -1
  didx% = 0
  group_flag& = 0
  print "{x93}";
  poke $d020, 0
  poke $d021, 0
  return


'-----------
.check_input
'-----------
  get a$
  if a$="{x9D}" and x>0 then gosub restore_char : x=x-1 : return
  if a$="{x1D}" and x<79 then gosub restore_char : x=x+1 : return
  if a$="{x91}" and y>0 then gosub restore_char : y=y-1 : return          
  if a$="{x11}" and y<49 then gosub restore_char : y=y+1 : return
  if a$="{x85}" then gosub load_file : return
  if a$="{x86}" then gosub save_file : return
  if a$=" " then gosub set_group_flag : return
  if a$="{x87}" then gosub play_data : return
  if a$<>"" then cursor x, y : gosub restore_char : print a$; : gosub save_char
  return


'--------------
.set_group_flag
'--------------
  if group_flag& = 0 then begin
    group_flag& = 1
    ldata&(didx%) = $ff
    poke $d020, $02
  bend:else begin
    group_flag& = 0
    ldata&(didx%) = $fe
    poke $d020, $00
  bend
  return


'---------
.load_file
'---------
  return


'---------
.save_file
'---------
  input "save name: ";fname$
  if fname$ = "" then return
  delete (fname$)
  dopen #2,(fname$),w,u8
  
  dclose #2
  return


'---------
.save_char
'---------
  return

  
'------------  
.restore_char
'------------
  if modified% then begin
    loc = $ff80000 + x + 80 * y
    poke loc, peek(loc) xor 32
    modified% = 0
    t0 = ti
  bend

  return


'-----------
.show_cursor
'-----------
  if ti > t0 then t0 = ti + .5:else return
  loc = $ff80000 + x + 80 * y
  poke loc, peek(loc) xor 32
  modified% = modified% xor 1
  return
ÿ