#output "line"

#declare a$, loc
#declare x=0, y=0
#declare t0=0
#declare modified%=0
#declare oldx, oldy
#declare fname$

#declare ldata&(8192), didx%=0, pidx%=0
#declare group_flag&, val&, rev_flag& = 0

gosub init

.main
gosub check_input
gosub show_cursor
goto main

'----
.init
'----
  ' switch back to upper-case
  ' poke $d018, peek($d018) and $fd
  oldx = -1 : oldy = -1
  didx% = 0
  group_flag& = 0 : rev_flag& = 0
  print "{x93}";
  poke $d020, 0
  poke $d021, 0
  return


'-----------
.check_input
'-----------
  get a$
  if a$<>"" then gosub draw_info
  if a$="{x9D}" and x>0 then gosub restore_char : x=x-1 : return
  if a$="{x1D}" and x<79 then gosub restore_char : x=x+1 : return
  if a$="{x91}" and y>0 then gosub restore_char : y=y-1 : return          
  if a$="{x11}" and y<49 then gosub restore_char : y=y+1 : return
  if a$="{x85}" then gosub load_file : return ' f1
  if a$="{x86}" then gosub save_file : return ' f3
  if a$="{x88}" then gosub set_group_flag : return ' f7
  if a$="{x87}" then gosub play_data : return ' f5
  if a$="{x12}" then rev_flag& = 1 : return
  if a$="{x92}" then rev_flag& = 0 : return
  if a$<>"" then cursor x, y : gosub restore_char : gosub chk_rev : print a$; : gosub save_char
  return


'---------
.draw_info
'---------
  print "{x13}";chr$(27);"qfname=";fname$;"  didx%=";didx%;
  return


'-------
.chk_rev
'-------
  if rev_flag& = 1 then print "{x12}";:else print "{x92}";
  return

'---------
.play_data
'---------
  print "{x93}";

  pidx% = 0
  do while pidx% < didx%
    val& = ldata&(pidx%) : pidx% = pidx% + 1
    if val& = $ff then group_flag& = 1 : goto pd_endloop
    if val& = $fe then group_flag& = 0 : sleep .02 : goto pd_endloop
    x = val&
    if x >= $80 then x=x-$80 : print "{x12}"; : else print "{x92}";
    y = ldata&(pidx%) : pidx% = pidx% + 1
    a$ = chr$(ldata&(pidx%)) : pidx% = pidx% + 1
    cursor x, y: print a$;
    if group_flag& = 0 then sleep .02
.pd_endloop
  loop

  return

'--------------
.set_group_flag
'--------------
  if group_flag& = 0 then begin
    group_flag& = 1
    ldata&(didx%) = $ff
    poke $d020, $02
  bend:else begin
    group_flag& = 0
    ldata&(didx%) = $fe
    poke $d020, $00
  bend
  didx% = didx% + 1
  return


'---------
.load_file
'---------
  input "load name: ";fname$
  if fname$ = "" then return
  gosub init
  dopen #2,(fname$),r,u8

  do
    get #2, val&
    if st then exit
    ldata&(didx%) = val&
    didx% = didx% + 1
  loop

  dclose #2
  gosub play_data
  return


'---------
.save_file
'---------
  input "save name: ";fname$
  if fname$ = "" then return
  delete (fname$)
  dopen #2,(fname$),w,u8

  for x = 0 to didx%
    print #2, chr$(ldata&(x));
  next x  
  dclose #2
  return


'---------
.save_char
'---------
  if oldx=x and oldy=y then begin
    ' replace previous char
    ldata&(didx%-3) = x + rev_flag& * $80
    ldata&(didx%-1) = asc(a$)
  bend:else:begin
    ' write new char
    ldata&(didx%) = x + rev_flag& * $80 : didx% = didx% + 1
    ldata&(didx%) = y : didx% = didx% + 1
    ldata&(didx%) = asc(a$) : didx% = didx% + 1
    
    oldx=x : oldy=y
  bend

  return

  
'------------  
.restore_char
'------------
  if modified% then begin
    loc = $ff80000 + x + 80 * y
    poke loc, peek(loc) xor 32
    modified% = 0
    t0 = ti
  bend

  return


'-----------
.show_cursor
'-----------
  if ti > t0 then t0 = ti + .5:else return
  loc = $ff80000 + x + 80 * y
  poke loc, peek(loc) xor 32
  modified% = modified% xor 1
  return
ÿ